# The level of internal Log4j events that should be logged to the console. 
# Valid values for this attribute are "trace", "debug", "info", "warn", "error" and "fatal". 
# Log4j will log details about initialization, rollover and other internal actions to the status logger. 
# Setting status="trace" is one of the first tools available to you if you need to troubleshoot log4j.
status = error

# The name of the configuration.
name = PropertiesConfig
 
# On fly filtering before even trying to write something in the logs
# By setting it to debug we are saying that the entire logger should accept all logs, and then determine which ones to print... 
# perhaps this way we are not as efficient as we could be, but not worse than we were with regular log4j, so why complicating.
filter.threshold.type = ThresholdFilter
filter.threshold.level = trace
 
# Defining Console Appender (Perhaps would be used only locally when running inside eclipse)
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d [%-4p] %m%n
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = trace

# Configuring custom logger for com.publicrelay.commons.core classes
logger.publicrelay.name = com.publicrelay
logger.publicrelay.level = info
logger.publicrelay.additivity = false
logger.publicrelay.appenderRef.rolling.ref = STDOUT

# In future more custom loggers could be configured here

# Configuring default logger for all other classes that do not fail under custom loggers
rootLogger.level = error
rootLogger.appenderRef.rolling.ref = STDOUT